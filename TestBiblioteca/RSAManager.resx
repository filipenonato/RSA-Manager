<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="txtPublicKey.Text" xml:space="preserve">
    <value>-----BEGIN PUBLIC KEY-----
MIGeMA0GCSqGSIb3DQEBAQUAA4GMADCBiAKBgGlnc7vrRzSd5Vgj+FzptnLChOlq
pv0tpiIoGk3XLY0PgAy1bAWCSjwyseZc5LYxybkQx2rZaV1XV40D8bodonh3xKwv
AYl1DBOS4A4oseLxvu8+329kCWhy6T4Bufuy5i2ndNxyyApD5tKNaeNoynO+iA5M
HxY5z9MyQtno1Tq/AgMBAAE=
-----END PUBLIC KEY-----</value>
  </data>
  <data name="txtPrivateKey.Text" xml:space="preserve">
    <value>-----BEGIN RSA PRIVATE KEY-----
MIICWwIBAAKBgGlnc7vrRzSd5Vgj+FzptnLChOlqpv0tpiIoGk3XLY0PgAy1bAWC
SjwyseZc5LYxybkQx2rZaV1XV40D8bodonh3xKwvAYl1DBOS4A4oseLxvu8+329k
CWhy6T4Bufuy5i2ndNxyyApD5tKNaeNoynO+iA5MHxY5z9MyQtno1Tq/AgMBAAEC
gYAkWRCIFTKQ6oJUStMy90V7fajn9Wdwl3VbAglQHowOwPGfcFC39Z4z9Cd1EUOt
sK2nrCmYpzC2h5AhiOKrE90ayXcYKwkFL4QUdLPHCcVZkNpgfUX3kTvOv9trFyXX
LQP3L4k59zMTeK3iK2yo7a1o0o+aaPN+SYF4wd6d1MXfwQJBANAhd/5yETEXxGpB
4Cvy+u8+qe6LQ/wX25KhYA0ujAFxGsjk4i4EIMm2eaPE6vE52ARAENhQG1nw/a+s
JDpb680CQQCBpYqd1YQhafqaEiFUDZ3nRUMkk7rGa+MDgdSAc1m7HjZxc6/0sPE6
YJ1/LgdNWuNRP5jEkv+e5iYIcNWKi+y7AkACuL1R9XnmE3J9FTlyOa4wXLhqJyYP
cNxtMXEJGxe3mRwJjnyqr2EiYiF7E8MivmflvlS6D2ocJfubRXv/y13tAkB6B86k
58/5/54xnXUff72sbWZYrHD2yaAhsffKfEjutu559XGeuVomH8C/cBzRdAZZeKoc
BV10PJ95/HMTeMd3AkEAmmRbK48crvLYSnlWO/f4bA16b5xLzxz0jQTZtc0+DpmE
/inBfEfjgC9O6fPrTjf6bpVHC97JxAZsdgneQvxVXA==
-----END RSA PRIVATE KEY-----</value>
  </data>
</root>